// <auto-generated />
using CuttingOptimizer.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CuttingOptimizer.Infrastructure.Migrations
{
    [DbContext(typeof(CuttingOptimizerDbContext))]
    partial class CuttingOptimizerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("OPNR2023")
                .StartsAt(2300001L);

            modelBuilder.HasSequence<int>("OPNR2024")
                .StartsAt(2400001L);

            modelBuilder.HasSequence<int>("OPNR2025")
                .StartsAt(2500001L);

            modelBuilder.Entity("CuttingOptimizer.Domain.Models.Blueprint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR OPNR2023");

                    b.Property<string>("JsonString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Blueprints");
                });

            modelBuilder.Entity("CuttingOptimizer.Domain.Models.Plate", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Plates");
                });

            modelBuilder.Entity("CuttingOptimizer.Domain.Models.Saw", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Thickness")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Saws");
                });
#pragma warning restore 612, 618
        }
    }
}
