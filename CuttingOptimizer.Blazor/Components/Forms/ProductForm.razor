@using CuttingOptimizer.Domain.Models;
    <div class="row title-bar">
        <div class="col-auto">
            <button type="button" class="btn btn-secondary" @onclick="AddProduct"><b>+</b></button>
        </div>
        <div class="col-auto">
            <h4 class="mt-1">Items</h4>
        </div>
        <div class="col-auto m-1 h-100">
            <input id="copyCheck" class="form-check-input checkbox-big" type="checkbox" @bind-value=Copy />
            <label class="form-label p-1 fw-bold" for="copyCheck">Kopieer data</label>
        </div>
    </div>

    <div class="container-fluid mt-2">
    @foreach(Product product in Products)
    {
        <div class="row my-4 my-xl-0">
            <div class="form-group col-12 col-xl-2 md-5 mb-xl-1">
                @if (product == Products[0])
                {
                <label class="form-label">Item</label>
                }
                <InputText class="form-control" id="productID" @bind-Value="product.ID" placeholder="ID" />
            </div>
            <div class="form-group col-12 col-xl-1 md-5 mb-xl-1">
                @if (product == Products[0])
                {
                <label class="form-label">Aantal</label>
                }
                <InputNumber class="form-control" id="productQuantity" @bind-Value="product.Quantity" placeholder="#"/>
            </div>
            <div class="form-group col-12 col-xl-2 md-5 mb-xl-1">
                @if (product == Products[0])
                {
                <label class="form-label">Lengte</label>
                }
                <InputNumber class="form-control" id="productLength" @bind-Value="product.Length" placeholder="Lengte" />
            </div>
            <div class="form-group col-12 col-xl-2 md-5 mb-xl-1">
                @if (product == Products[0])
                {
                <label class="form-label">Breedte</label>
                }
                <InputNumber class="form-control" id="productWidth" @bind-Value="product.Width" placeholder="Breedte" />
            </div>
            <div class="form-group col-12 col-xl-1 md-5 mb-xl-1">
                @if (product == Products[0])
                {
                <label class="form-label">Dikte</label>
                }
                <InputNumber class="form-control" id="productHeight" @bind-Value="product.Height" placeholder="Hoogte" />
            </div>
            <div class="form-group col-12 col-xl-1 md-5 mb-xl-1">
                @if (product == Products[0])
                {
                <label class="form-label">Verwijder</label>
                }
                <button type="button" class="form-control btn btn-danger" @onclick="() => RemoveProduct(product)"><span class="oi oi-trash"/></button>
            </div>
        </div>
    }
    </div>


@code {
    [Parameter]
    public List<Product> Products { get; set; } = new List<Product>();

    private bool Copy { get; set; } = false;

    protected override void OnInitialized()
    {
        Product prod = new Product
            {
                Quantity = 1,
                ID = "A1"
            };
        if(Products.Count() == 0) Products.Add(prod);
    }

    private void AddProduct()
    {
        Product? last = Products.OrderByDescending(c => c.ID).FirstOrDefault();
        string name = "";
        int lenght=0;
        int width = 0;

        if(last != null)
        {
            try
            {
                if (Copy)
                {
                    lenght = last.Length;
                    width = last.Width;
                }
                int number = Convert.ToInt16(last.ID.Substring(last.ID.Length - 1, 1));
                name = last.ID.Substring(0, last.ID.Length - 1);
                name += number + 1;
            }
            catch (Exception ex)
            {
                name = last.ID + 1;
            }
        }
        else
        {
            name += 1;
        }

        Product prod = new Product
            {
                Quantity = 1,
                ID = name,
                Length = lenght,
                Width = width
            };

        Products.Add(prod);
    }

    private void RemoveProduct(Product product)
    {
        if(Products.Count() > 1) Products.Remove(product);
    }
}
