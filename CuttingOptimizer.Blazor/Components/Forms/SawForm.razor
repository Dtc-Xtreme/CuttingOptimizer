@using CuttingOptimizer.Domain.Models;
    <div class="row title-bar">
        <div class="form-group col-auto">
            <h3>Zaag</h3>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group w-100 col-lg-1 col-xs-12">
            <label for="sawID">Zaagblad</label>
            <InputText class="form-control" id="sawID" @bind-Value="Saw.ID" placeholder="ID" list="sawList" @onkeyup="() => SearchOrSelect(Saw.ID)"/>
            <datalist id="sawList">
            @foreach (Saw saw in SearchSaws)
            {
                <option value="@saw.ID">@saw.ID - (@saw.Thickness mm)</option>
            }
        </datalist>
        </div>
        <div class="form-group w-100 col-lg-1 col-xs-12">
            <label for="sawThickness">Zaagsnede</label>
            <InputNumber class="form-control" id="sawThickness" @bind-Value="Saw.Thickness" placeholder="Dikte" />
        </div>
    </div>

@code {
    [Parameter]
    public Saw Saw { get; set; }

    private List<Saw> SearchSaws = new List<Saw>{
            new Saw("SX1", 1),
            new Saw("SX2", 5),
            new Saw("SX3", 10)
        };

    protected override void OnInitialized()
    {
        if(Saw == null) Saw = new Saw();
    }

    private void SearchOrSelect(string value)
    {
        Saw? sawResult = SearchSaws.FirstOrDefault(c => c.ID.ToLower() == value.ToLower());
        if (sawResult != null)
        {
            Saw.ID = sawResult.ID;
            Saw.Thickness = sawResult.Thickness;
        }
        //else
        //{
        //    // change SearchSaws with api call
        //}
    }
}